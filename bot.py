from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler, MessageHandler, filters

# –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç @BotFather
BOT_TOKEN = 'YOUR_BOT_TOKEN_HERE'

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É", callback_data='apply')],
        [InlineKeyboardButton("–ü—Ä–æ –∫–æ–º–ø–∞–Ω—ñ—é", callback_data='about')],
        [InlineKeyboardButton("FAQ", callback_data='faq')],
        [InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç–∏", callback_data='contact')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø HR-–±–æ—Ç Velora Corp. –ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?", reply_markup=reply_markup
    )

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if query.data == 'apply':
        await query.edit_message_text("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å–≤–æ—î —Ä–µ–∑—é–º–µ –∞–±–æ –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –¥–æ—Å–≤—ñ–¥—É.")
    elif query.data == 'about':
        await query.edit_message_text("Velora Corp ‚Äî –ø—Ä–æ—Å—Ç—ñ—Ä –¥–ª—è —ñ–¥–µ–π —Ç–∞ —Ä—ñ—à–µ–Ω—å. –ù–∞—à–∞ –º—ñ—Å—ñ—è: ...")
    elif query.data == 'faq':
        await query.edit_message_text("FAQ:\n1. –Ø–∫ –ø–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É?\n2. –Ø–∫—ñ —É–º–æ–≤–∏ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ?\n3. –Ø–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤—ñ–¥–±—ñ—Ä?")
    elif query.data == 'contact':
        await query.edit_message_text("üìß contact@veloracorp.com\nüåê veloracorp.com")

async def receive_resume(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ email –∏–ª–∏ –≤ –¥—Ä—É–≥–æ–π —á–∞—Ç
    await update.message.reply_text(f"–î—è–∫—É—î–º–æ, {user.first_name}! –ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É.")

app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button))
app.add_handler(MessageHandler(filters.Document.ALL | filters.TEXT, receive_resume))

app.run_polling()
